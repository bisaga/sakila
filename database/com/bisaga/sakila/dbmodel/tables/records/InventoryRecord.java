/*
 * This file is generated by jOOQ.
*/
package com.bisaga.sakila.dbmodel.tables.records;


import com.bisaga.sakila.dbmodel.tables.Inventory;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InventoryRecord extends UpdatableRecordImpl<InventoryRecord> implements Record4<Integer, Short, Short, Timestamp> {

    private static final long serialVersionUID = 2125901174;

    /**
     * Setter for <code>public.inventory.inventory_id</code>.
     */
    public void setInventoryId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.inventory.inventory_id</code>.
     */
    public Integer getInventoryId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.inventory.film_id</code>.
     */
    public void setFilmId(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.inventory.film_id</code>.
     */
    public Short getFilmId() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>public.inventory.store_id</code>.
     */
    public void setStoreId(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.inventory.store_id</code>.
     */
    public Short getStoreId() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>public.inventory.last_update</code>.
     */
    public void setLastUpdate(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.inventory.last_update</code>.
     */
    public Timestamp getLastUpdate() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Short, Short, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Short, Short, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Inventory.INVENTORY.INVENTORY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field2() {
        return Inventory.INVENTORY.FILM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return Inventory.INVENTORY.STORE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Inventory.INVENTORY.LAST_UPDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getInventoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component2() {
        return getFilmId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getStoreId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getLastUpdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getInventoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value2() {
        return getFilmId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getStoreId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getLastUpdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InventoryRecord value1(Integer value) {
        setInventoryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InventoryRecord value2(Short value) {
        setFilmId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InventoryRecord value3(Short value) {
        setStoreId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InventoryRecord value4(Timestamp value) {
        setLastUpdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InventoryRecord values(Integer value1, Short value2, Short value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InventoryRecord
     */
    public InventoryRecord() {
        super(Inventory.INVENTORY);
    }

    /**
     * Create a detached, initialised InventoryRecord
     */
    public InventoryRecord(Integer inventoryId, Short filmId, Short storeId, Timestamp lastUpdate) {
        super(Inventory.INVENTORY);

        set(0, inventoryId);
        set(1, filmId);
        set(2, storeId);
        set(3, lastUpdate);
    }
}
